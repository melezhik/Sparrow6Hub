<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Sparrow - swiss army knife automation toolkit</title>
    <link rel="stylesheet" href="https://jenil.github.io/bulmaswatch/<.theme>/bulmaswatch.min.css">
    <script defer src="https://use.fontawesome.com/releases/v5.14.0/js/all.js"></script>
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/styles/default.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
  </head>
  <body>

  <section class="section">
    <div class="container">
      <!-- Main container -->
      <nav class="level">
        <!-- Left side -->
        <div class="level-left">
          <div class="level-item">
            <p class="subtitle is-5">
              <strong><.plg-cnt></strong> plugins
            </p>
          </div>
          <form action="/search" method="GET">
            <div class="level-item">
              <div class="field has-addons">
                <p class="control">
                  <input class="input" type="text" name="q" placeholder="Find a plugin">
                </p>
                <p class="control">
                  <button class="button">
                    Search
                  </button>
                </p>
              </div>
            </div>
          </form>
        </div>
        <!-- Right side -->
        <div class="level-right">
          <p class="level-item"><a href="/">Home</a></p>
          <p class="level-item"><strong>Examples</strong></p>
          <p class="level-item"><a href="/search?q=all">Plugins</a></p>
          <p class="level-item"><a href="https://github.com/melezhik/Sparrow6">Source</a></p>
          <p class="level-item"><a href="https://sparrowdo.wordpress.com">Blog</a></p>
        </div>
      </nav>

      <nav class="panel">
        <p class="panel-heading" id="top">
            Sparrow usage examples
        </p>
        
        <div class="panel-block">
              <nav class="tabs is-boxed is-fullwidth">
                <div class="container">
                  <ul>
                    <li class="tab is-active" onclick="openTab(event,'Git')"><a href="#Git/" id="exGit">Git</a></li>
                    <li class="tab" onclick="openTab(event,'CICD')"><a href="#CICD/" id="exCICD">CICD</a></li>
                    <li class="tab" onclick="openTab(event,'Systemd')"><a href="#Systemd/" id="exSystemd">Systemd</a></li>
                    <li class="tab" onclick="openTab(event,'K8s')"><a href="#K8s/" id="exK8s">Kubernetes</a></li>
                    <li class="tab" onclick="openTab(event,'Azure')"><a href="#Azure/" id="exAzure">Azure</a></li>
                    <li class="tab" onclick="openTab(event,'Development')"><a href="#Development/" id="exDevelopment">Development</a></li>
                    <li class="tab" onclick="openTab(event,'Raku')"><a href="#Raku/" id="exRaku">Raku</a></li>
                    <li class="tab" onclick="openTab(event,'Alpine')"><a href="#Alpine/" id="exAlpine">Alpine</a></li>
                    <li class="tab" onclick="openTab(event,'Utils')"><a href="#Utils/" id="exUtils">Utils</a></li>
                  </ul>
                </div>
              </nav>
        </div>

        <div class="panel-block">
          <p>
            <div class="container section">

              <div id="Git" class="content-tab">
                <p>
  Set up Git repository<pre><code>task-run "set git", "git-base", %(
  :email&lt;melezhik@gmail.com&gt;,
  :name&lt;Alexey Melezhik&gt;,
  :config_scope&lt;local&gt;,
  :set_credential_cache&lt;on&gt;
);</code></pre><br>
  List total commits by author (sorted by commit count)<pre><code>my %state = task-run "git stat", "git-commits-by-author";

for %state&lt;list&gt;&lt;&gt; -> $i {
  say "author: ",$i&lt;author&gt;, 
      "commits: ", $i&lt;commits&gt;, 
      "email: ", $i&lt;email&gt;;
}</code></pre>
                </p>
              </div>

              <div id="CICD" class="content-tab" style="display:none">
                <p>
  Queue Azure DevOps build and wait till it finishes<pre><code>my %state = task_run "run my build", "ado-pipeline-build", %(
  name => "WebApp",
  variables => "foo:1 bar:2"
  action => "run"
);

# wait till the my  build finishes
task_run "wait my build", "ado-pipeline-build", %(
  action => "wait",
  build_id => %state&lt;build_id&gt;
);</code></pre><br>
  Run GitLab Pipeline<pre><code>task-run "pipe-run", "gitlab-run-pipeline", %(
  :debug,
  :1001project,
  :gitlab_api&lt;https://git.company.com/api/v4/&gt;,
  variables => %(
    :color&lt;green&gt;,
    :size&lt;big&gt;,
    :dev_mode
  )
)</code></pre>
                </p>
              </div>

              <div id="Systemd" class="content-tab" style="display:none">
                <p>
  Installs systemd unit for service<pre><code>my $s = task-run "container deploy service", "systemd-service-unit", %(
  :description&lt;container-deploy&gt;,
  :name&lt;container-deploy&gt;,
  :type&lt;oneshot&gt;,
  environment => ["HOME=/root", "GOCACHE=/tmp/go-cache", "GOPATH=/tmp/go"],
  :environment_file&lt;/etc/default/container-deploy&gt;,
  exec_start => "/usr/bin/go run /usr/local/bin/container-deploy.go",
);

if $s<changed> {
  bash "systemctl daemon-reload";
}
</code></pre><br>
  Install systemd unit for timer<pre><code>my $s = task-run "my timer", "systemd-timer-unit",  %(
  :description&lt;Container Deploy Timer&gt;,
  :name&lt;container-deploy&gt;,
  :requires&lt;container-deploy.service&gt;,
  :on_boot_sec&lt;5min&gt;,
  :on_unit_active_sec&lt;3min&gt;,
  :randomized_delay_sec&lt;1min&gt;,
  :accuracy_sec&lt;2min&gt;,
);

if $s<changed> {
  bash "systemctl daemon-reload";
  service-enable "container-deploy.timer";
}</code></pre>
                </p>
              </div>

              <div id="K8s" class="content-tab" style="display:none">
                <p>
  Test if a k8s deployment exists and has attributes<pre><code>task-run "dpl check", "k8s-deployment-check" %(
  name => "animals",
  namespace => "pets",
  cat => %(
    command => "/usr/bin/cat",
    args => [
      "eat", "milk", "fish" 
    ],
    env => [
      "ENABLE_LOGGING"
    ]
    volume-mounts => {
      foo-bar => "/opt/foo/bar",
    }
  )
);</code></pre><br>
  Test if k8s config map exists and has entries<pre><code>task-run "cm check", "k8s-config-check", %(
  type => "configmap",
  name => "web-config",
  namespace => "dashboards",
  # check if we have admin and password entries 
  # in config map
  data => [
    "note: creds for login",
    "[admin=root]",
    'regexp: "[password=" \S+ "]" $$',
  ]
);</code></pre>
                </p>
              </div>

              <div id="Azure" class="content-tab" style="display:none">
                <p>
    Check that Azure KV secrets exists<pre><code>task-run "check secrets", "azure-kv-secrets-check", %(
  name => "kv100", # the name of keyvault
  exists => [ # these keys should exists
    'password1',
    'password2',
    'db-password1',
    'db-password2'
  ]
)</code></pre><br>
  Calculate permission number for Azure Devops permissions<pre><code>task-run "permissions sum", "ado-permissions-calculator", %(
  namespace => "Library",
  actions => ["View", "Create"]
);</code></pre>
                </p>
              </div>

              <div id="Development" class="content-tab" style="display:none">
                <p>
  Lint yaml files<pre><code>task-run "lint these files", "yaml-lint", %(
  files => "path/to/dir/*.yaml",
  use_python => False
);</code></pre><br>
  Clean up python cache files<pre><code>task-run "clean-cache", "python-helpers", %(
  task => "clean-cache",
  dir => [ "{%*ENV<HOME>}/.local", '/tmp/foo/' ]
)</code></pre>
                </p>
              </div>

              <div id="Alpine" class="content-tab" style="display:none">
                <p>
  Install Azure cli<pre><code class="language-bash">s6 --plg-run alpine-az-cli-install</code></pre></code></pre><br>
  Validate APKBUILD file<pre><code class="language-bash">s6 --plg-run apkbuild-strict@path=community/raku-sparrow6/APKBUILD</code></pre>
                </p>
              </div>

              <div id="Raku" class="content-tab" style="display:none">
                <p>
  Set up fez account<pre><code class="language-bash">s6 --plg-run fez-login@user=melezhik,password=superSECRET123</code></pre></code></pre><br>
  Fetch zef distribution and return download directory<pre><code>my %state = task-run "zef fetch Kind", "zef-fetch", %(
  identity => 'Kind'
);

say %state&lt;directory&gt;</code></pre><br>
  Install Rakudo<pre><code>task-run "install Rakudo 2025.08", "rakudo-install", %(
  version => "2025.08",
  user => "alex",
);</code></pre>
                </p>
              </div>

              <div id="Utils" class="content-tab" style="display:none">
                <p>
  Setup nanorc file<pre><code class="language-bash">s6 --plg-run nano-setup</code></pre></code></pre>
                <br>
                Verify that disks are full on no more than 70 percents<pre><code>s6 --plg-run df-check@threshold=70</code></pre>
                </p>
              </div>

            </div>

          </p>

        </div>

      </nav>

    </div>
  </section>
  <script src="js/misc.js"></script>
  </body>
</html>
