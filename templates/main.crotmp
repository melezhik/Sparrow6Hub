<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>SparrowHub - Raku Plugins for daily $work</title>
    <link rel="stylesheet" href="https://jenil.github.io/bulmaswatch/<.theme>/bulmaswatch.min.css">
    <script defer src="https://use.fontawesome.com/releases/v5.14.0/js/all.js"></script>
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/styles/default.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
  </head>
  <body>

  <script src="js/misc.js"></script>
  <section class="section">
    <div class="container">
      <!-- Main container -->
      <nav class="level">
        <!-- Left side -->
        <div class="level-left">
          <div class="level-item">
            <p class="subtitle is-5">
              <strong><.plg-cnt></strong> plugins
            </p>
          </div>
          <form action="/search" method="GET">
            <div class="level-item">
              <div class="field has-addons">
                <p class="control">
                  <input class="input" type="text" name="q" placeholder="Find a plugin">
                </p>
                <p class="control">
                  <button class="button">
                    Search
                  </button>
                </p>
              </div>
            </div>
          </form>
        </div>
        <!-- Right side -->
        <div class="level-right">
          <p class="level-item"><strong>Home</strong></p>
          <p class="level-item"><a href="/search?q=all">Plugins</a></p>
          <p class="level-item"><a href="https://github.com/melezhik/Sparrow6">GitHub</a></p>
          <p class="level-item"><a href="https://dev.to/melezhik/">Blog</a></p>
        </div>
      </nav>

      <nav class="panel">
        <p class="panel-heading">
          Welcome to SparrowHub - Raku plugins for daily $work
        </p>                                                                                                                                                                    <div class="panel-block">
        <div class="panel-block">
          <p class="control">
            <span class="icon"><i class="fas fas fa-check-square"></i></span> SparrowHub is a repository of Raku plugins - small automation utilities get run as Raku functions<br>
            <span class="icon"><i class="fas fas fa-check-square"></i></span><a href="https://github.com/melezhik/Sparrow6" target="_blank">Sparrow</a> is an automation engine that runs the plugins<br>
            <span class="icon"><i class="fas fas fa-check-square"></i></span>Plugins could be written on many languages but for end user they are Raku tasks<br>
            <span class="icon"><i class="fas fas fa-check-square"></i></span><a href="https://raku.org" target="_blank">Raku</a> is a modern and powerful language. Sparrow makes it possible to integrate your code written on many other languages
          into Raku scenarios<br>
            <span class="icon"><i class="fas fas fa-check-square"></i></span>Sparrow is you number one helper with daily automation tasks, it's super flexible and fun to use. Try it out! (See examples bellow)
        </p>
        </div>
      </nav>

      <nav class="panel">
        <p class="panel-heading">
          Installation
        </p>                                                                                                                                                                    <div class="panel-block">
        <div class="panel-block">
          <pre><code class="language-bash">zef install --/test Sparrow6
export SP6_REPO=http://sparrowhub.io/repo</code></pre>
        </div>
      </nav>

      <nav class="panel">
        <p class="panel-heading">
            Raku plugins for daily $work
        </p>
        
        <div class="panel-block">
              <nav class="tabs is-boxed is-fullwidth">
                <div class="container">
                  <ul>
                    <li class="tab is-active" onclick="openTab(event,'Git')"><a >Git</a></li>
                    <li class="tab" onclick="openTab(event,'CICD')"><a >CICD</a></li>
                    <li class="tab" onclick="openTab(event,'K8s')"><a >Kubernetes</a></li>
                    <li class="tab" onclick="openTab(event,'Azure')"><a >Azure</a></li>
                    <li class="tab" onclick="openTab(event,'Development')"><a >Development</a></li>
                  </ul>
                </div>
              </nav>
        </div>

        <div class="panel-block">
          <p>
            <div class="container section">

              <div id="Git" class="content-tab">
                <p>
  Set up Git<pre><code>task-run "set git", "git-base", %(
  email => 'melezhik@gmail.com',
  name  => 'Alexey Melezhik',
  config_scope => 'local',
  set_credential_cache => 'on'
);</code></pre><br>
  List total commits by author (sorted by commit count)<pre><code>my %state = task-run "commits-by-authors", "git-commits-by-author";

for %state%&lt;list&gt;&lt;&gt; -> $i {
  say "author: ",$i<author>, "commits: ", $i<commits>, "email: ", $i<email>
}</code></pre>
                </p>
              </div>


              <div id="CICD" class="content-tab" style="display:none">
                <p>
  Aueue Azure DevOps build and wait till it finishes<pre><code>my %state = task_run "run my build", "ado-pipeline-build", %(
  name => "WebApp",
  variables => "foo:1 bar:2"
  action => "run"
);

# wait till the my  build finishes
task_run "wait my build", "ado-pipeline-build", %(
  action => "wait",
  build_id => %state&lt;build_id&gt;
);</code></pre><br>
  Run GitLab Pipeline<pre><code>task-run "pipe-run", "gitlab-run-pipeline", %(
  debug => True,
  project => 1001,
  gitlab_api => "https://git.company.com/api/v4/",
  variables => %(
    color => "green",
    size => "big",
    use_salt => True
  )
)</code></pre>
                </p>
              </div>

              <div id="K8s" class="content-tab" style="display:none">
                <p>
  Test if a k8s deployment exists and has attributes<pre><code>task-run "dpl check", "k8s-deployment-check" %(
  name => "animals",
  namespace => "pets",
  cat => %(
    command => "/usr/bin/cat",
    args => [
      "eat", "milk", "fish" 
    ],
    env => [
      "ENABLE_LOGGING"
    ]
    volume-mounts => {
      foo-bar => "/opt/foo/bar",
    }
  )
);</code></pre><br>
  Test if k8s config map exists and has entries<pre><code>task-run "cm check", "k8s-config-check", %(
  type => "configmap",
  name => "web-config",
  namespace => "dashboards",
  # check if we have admin and password entries 
  # in config map
  data => [
    "note: creds for login",
    "[admin=root]",
    'regexp: "[password=" \S+ "]" $$',
  ]
);</code></pre>
                </p>
              </div>

              <div id="Azure" class="content-tab" style="display:none">
                <p>
    Check that Azure KV secrets exists<pre><code>task-run "check secrets", "azure-kv-secrets-check", %(
  name => "kv100", # the name of keyvault
  exists => [ # these keys should exists
    'password1',
    'password2',
    'db-password1',
    'db-password2'
  ]
)</code></pre><br>
  Calculate permission number for Azure Devops permissions<pre><code>task-run "permissions sum", "ado-permissions-calculator", %(
  namespace => "Library",
  actions => qqw{View Create}
);</code></pre>
                </p>
              </div>

              <div id="Development" class="content-tab" style="display:none">
                <p>
  Lint yaml files<pre><code>task-run "lint these files", "yaml-lint", %(
  files => "path/to/dir/*.yaml",
  use_python => False
);</code></pre><br>
  Clean up python cache files<pre><code>task-run "clean-cache", "python-helpers", %(
  task => "clean-cache",
  dir => [ "{%*ENV<HOME>}/.local", '/tmp/foo/' ]
)</code></pre>
                </p>
              </div>


            </div>

          </p>

        </div>

      </nav>

      <nav class="panel">
        <p class="panel-heading">
          News
        </p>                                                                                                                                                                    <div class="panel-block">
        <div class="panel-block">
            <p class="control">
              <a href="https://dev.to/melezhik/useful-terminal-plugins-to-build-golang-code-gj0">24/01/2025</a> - Useful terminal plugins to build golang code 
              <a href="https://dev.to/melezhik/simple-find-in-source-code-with-tomtit-and-sparrow-312">23/01/2025</a> - Simple search in source code with Tomtit and Sparrow
              <a href="https://dev.to/melezhik/developing-a-simple-sparrow-plugin-with-raku-and-bash-51g0">20/01/2015</a> - Developing a simple Sparrow plugin with Raku and Bash
              <a href="https://dev.to/melezhik/go-pipelines-with-raku-interfaces-j7o">05/11/2024</a> - Go pipelines with Raku interfaces
              <a href="https://dev.to/melezhik/oh-my-tomtit-alternative-to-oh-my-zshell-written-on-raku-4oc5">08/19/2021</a> - Oh my Tomtit - alternative to oh my zsh written on Raku 
              <a href="https://dev.to/melezhik/sparrow-plugin-to-run-gitlab-pipelines-programmatically-5113">08/16/2021</a> - Sparrow plugin to run gitlab pipelines programmatically 
              <a href="https://dev.to/melezhik/bird-raku-dsl-for-infrastructure-testing-1hph">08/13/2021</a> - Bird - Raku DSL for infrastructure testing 
              <a href="https://conf.raku.org/talk/164">08/07/2021</a> - 5 minutes introduction into Sparrow , 5 minutes introduction into Bird. RakuConf. Youtube presentation.
              <a href="https://dev.to/melezhik/validating-k8s-deployments-using-sparrow-5f3f">07/26/2021</a> - Validating k8s deployments using Sparrow.
              <a href="https://dev.to/melezhik/sparrow-plugin-to-convert-markdown-to-pdf-4k9p">07/22/2021</a> - Sparrow plugin to convert markdown to pdf.
              <a href="https://dev.to/melezhik/write-devopsish-tests-using-tomty-and-raku-2fl2">07/04/2021</a> - Write devopsish tests using Tomty and Raku.
              <a href="https://github.com/melezhik/r3tool/wiki/Baking-Rakudo-Releases-With-R3">28/06/2021</a> - Baking Rakudo Releases With R3
              <a href="https://sparrowdo.wordpress.com/2020/12/15/sparky-on-k8s-cluster/">12/15/2020</a> - Sparky on k8s cluster.
              <a href="https://raku-advent.blog/2020/12/07/mixing-bash-and-raku-using-sparrow/">12/07/2020</a> - Day 7: Mixing Bash and Raku Using Sparrow
              <a href="https://dev.to/melezhik/sparrowdo-ubiquitous-asynchronous-task-runner-with-nice-frontend-5c1k">11/10/2020</a> - Sparrowdo - Ubiquitous Asynchronous Task Runner ( with Nice Frontend ).
              <a href="https://dev.to/melezhik/development-workflow-management-using-tomtit-44m4">10/05/2020</a> - Development workflow management using Tomtit. 
              <a href="https://dev.to/melezhik/sparrowhub-io-repository-of-devops-and-automation-utilities-4mk8">09/28/2020</a> - Sparrowhub.io - repository of devops and automation utilities.
              <a href="https://dev.to/melezhik/simple-blackbox-testing-with-raku-and-sparrow6-g32">12/24/2019</a> - Simple blackbox testing with Raku and Sparrow6
            </p>
        </div>
      </nav>
    </div>
  </section>    
  </body>
</html>
